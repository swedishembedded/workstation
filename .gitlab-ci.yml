---
stages:
  - build
  - bootstrap
  - release
  - publish

default:
  image: swedishembedded/build:latest

workflow:
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"

.sudo:
  before_script:
    - apt-get update && apt-get install -qy sudo
    - echo 'debconf debconf/frontend select Noninteractive' | sudo
      debconf-set-selections

documentation:
  stage: build
  artifacts:
    paths:
      - build-doc/_build/
    expire_in: 2 weeks
    when: always
  rules:
    - if: $CI_PIPELINE_BRANCH == "main"
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - pip3 install -r requirements.txt
    - mkdir build-doc && cd build-doc && cmake ../doc
    - make

.build: &build
  stage: build
  tags:
    - docker-dind
  image: docker:latest
  artifacts:
    paths:
    expire_in: 2 weeks
    when: always
  before_script:
    - echo "$DOCKER_TOKEN" | docker login --username "$DOCKER_USERNAME" --password-stdin
    - docker info
  script:
    - docker build
      -f Dockerfile."${IMAGE}"
      -t swedishembedded/"${IMAGE}":${CI_COMMIT_SHORT_SHA} .
    # TODO: test the image
    - docker tag
      swedishembedded/$IMAGE:${CI_COMMIT_SHORT_SHA}
      swedishembedded/$IMAGE:latest
    - docker rmi swedishembedded/$IMAGE:$CI_COMMIT_SHORT_SHA
    - docker push swedishembedded/$IMAGE:latest

base:
  <<: *build
  variables:
    IMAGE: base

build:
  <<: *build
  variables:
    IMAGE: build
  needs: ["base"]

workstation:
  <<: *build
  variables:
    IMAGE: workstation
  needs: ["build"]

bootstrap:
  image: ubuntu:22.04
  stage: bootstrap
  when: manual
  script:
    - ./scripts/bootstrap/docker
    - ./scripts/bootstrap/gdb
    - ./scripts/bootstrap/i3
    - ./scripts/bootstrap/nvim
    - ./scripts/bootstrap/tmux
    - ./scripts/bootstrap/sdk

  image: registry.gitlab.com/gitlab-org/release-cli:latest

release:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      when: manual
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      when: manual
  script:
    - echo "Making a release"
  release:
    name: v0.26.6-0
    tag_name: v0.26.6-0
    description: 'Official Image'
  needs: []

publish:
  stage: publish
  image: docker:latest
  tags:
    - docker-dind
  variables:
    TAG: v0.26.6-0
  parallel:
    matrix:
      - IMAGE: [base, build, workstation]
  artifacts:
    paths:
    expire_in: 2 weeks
    when: always
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      when: manual
  before_script:
    - echo "$DOCKER_TOKEN" | docker login --username "$DOCKER_USERNAME" --password-stdin
    - docker info
  script:
    # Take the latest image and push it into the tag
    - docker pull swedishembedded/$IMAGE:latest
    - docker tag swedishembedded/$IMAGE:latest swedishembedded/$IMAGE:$TAG
    - docker push swedishembedded/$IMAGE:$TAG
  needs: [release]

