---
stages:
  - build
  - bootstrap
  - release
  - publish

default:
  image: swedishembedded/build:latest

.sudo:
  before_script:
    - apt-get update && apt-get install -qy sudo
    - echo 'debconf debconf/frontend select Noninteractive' | sudo
      debconf-set-selections

documentation:
  stage: build
  artifacts:
    paths:
      - build-doc/_build/
    expire_in: 2 weeks
    when: always
  rules:
    - if: $CI_PIPELINE_BRANCH == "main"
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - pip3 install -r requirements.txt
    - mkdir build-doc && cd build-doc && cmake ../doc
    - make

.build: &build
  stage: build
  tags:
    - docker-dind
  image: docker:latest
  artifacts:
    paths:
    expire_in: 2 weeks
    when: always
  rules:
    - if: $CI_PIPELINE_BRANCH == "main"
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
  before_script:
    - docker info
  script:
    - set -x
    - ./scripts/build $IMAGE

base:
  <<: *build
  variables:
    IMAGE: base

ci:
  <<: *build
  variables:
    IMAGE: ci
  needs: ["base"]

build:
  <<: *build
  variables:
    IMAGE: build
  needs: ["ci"]

devel:
  <<: *build
  variables:
    IMAGE: devel
  needs: ["build"]

workstation:
  <<: *build
  variables:
    IMAGE: workstation
  needs: ["devel"]

bootstrap:
  image: ubuntu:22.04
  stage: bootstrap
  when: manual
  rules:
    - if: $CI_PIPELINE_BRANCH == "main"
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - ./scripts/bootstrap/docker
    - ./scripts/bootstrap/gdb
    - ./scripts/bootstrap/i3
    - ./scripts/bootstrap/nvim
    - ./scripts/bootstrap/tmux
    - ./scripts/bootstrap/sdk

  image: registry.gitlab.com/gitlab-org/release-cli:latest

release:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      when: manual
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      when: never
  script:
    - echo "Making a release"
  release:
    name: v0.26.4-1
    tag_name: v0.26.4-1
    description: 'Official Image'

publish:
  stage: publish
  image: docker:latest
  tags:
    - docker-dind
  variables:
    TAG: v0.26.4-1
  parallel:
    matrix:
      - IMAGE: [base, ci, build, devel, workstation]
  artifacts:
    paths:
    expire_in: 2 weeks
    when: always
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      when: never
  before_script:
    - echo "$DOCKER_TOKEN" | docker login --username "$DOCKER_USERNAME" --password-stdin
    - docker info
  script:
    - docker push swedishembedded/$IMAGE:$TAG
    - docker push swedishembedded/$IMAGE:latest
  needs: [release]

